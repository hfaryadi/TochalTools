@model OrderCreateViewModel
@{
    ViewBag.Title = "ثبت سفارش";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}

<!-- contact area -->
<div class="section-full content-inner bg-white">
    <div class="container">
        <div class="row">
            <!-- Left part start -->
            <div class="col-lg-12">
                <div class="p-a30 bg-gray clearfix m-b30 ">
                    <h2>اطلاعات خود را وارد نمایید.</h2>
                    <div class="dzFormMsg"></div>
                    @using (Html.BeginForm("Create", "Order", FormMethod.Post))
                    {
                        var name = "";
                        var mobile = "";
                        var tell = "";
                        var postalCode = "";
                        var address = "";
                        var countryId = 0;
                        var stateId = 0;
                        var cityId = 0;
                        if (User.Identity.IsAuthenticated)
                        {
                            ApplicationDbContext db = new ApplicationDbContext();
                            var profile = db.Profiles.Find(User.Identity.GetUserId());
                            if (profile != null)
                            {
                                if (profile.Name != null && profile.Name != "")
                                {
                                    name = profile.Name;
                                }
                                if (profile.Mobile != null && profile.Mobile != "")
                                {
                                    mobile = profile.Mobile;
                                }
                                if (profile.Tell != null && profile.Tell != "")
                                {
                                    tell = profile.Tell;
                                }
                                if (profile.PostalCode != null && profile.PostalCode != "")
                                {
                                    postalCode = profile.PostalCode;
                                }
                                if (profile.Address != null && profile.Address != "")
                                {
                                    address = profile.Address;
                                }
                                if (profile.CountryId > 0)
                                {
                                    countryId = profile.CountryId;
                                }
                                if (profile.StateId > 0)
                                {
                                    stateId = profile.StateId;
                                }
                                if (profile.CityId > 0)
                                {
                                    cityId = profile.CityId;
                                }
                            }
                        }
                        <script>
                            var countryId = '@countryId';
                            var stateId = '@stateId';
                            var cityId = '@cityId';
                            var address = '@address'
                        </script>
                        @Html.AntiForgeryToken()
                        <input type="hidden" value="ContactUs" name="Group" id="Group" />
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <div class="comment-form-author">
                                        <label>نام و نام خانوادگی <span class="required">*</span> @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })</label>
                                        @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", @Value = name } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <div class="comment-form-author">
                                        <label>نام تحویل گیرنده <span class="required">*</span> @Html.ValidationMessageFor(m => m.ReceiverName, "", new { @class = "text-danger" })</label>
                                        @Html.EditorFor(m => m.ReceiverName, new { htmlAttributes = new { @class = "form-control", @Value = name } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <div class="comment-form-author">
                                        <label>موبایل <span class="required">*</span> @Html.ValidationMessageFor(m => m.Mobile, "", new { @class = "text-danger" })</label>
                                        @Html.EditorFor(m => m.Mobile, new { htmlAttributes = new { @class = "form-control", @Value = mobile } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <div class="comment-form-author">
                                        <label>تلفن ثابت @Html.ValidationMessageFor(m => m.Tell, "", new { @class = "text-danger" })</label>
                                        @Html.EditorFor(m => m.Tell, new { htmlAttributes = new { @class = "form-control", @Value = tell } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <div class="comment-form-author">
                                        <label>کشور <span class="required">*</span> @Html.ValidationMessageFor(m => m.CountryId, "", new { @class = "text-danger" })</label>
                                        @Html.DropDownListFor(m => m.CountryId, Model.CountriesList, "انتخاب کنید", new { @class = "form-control", @onchange = "getStates('CountryId', 'StateId', 'CityId')" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <div class="comment-form-author">
                                        <label>استان <span class="required">*</span> @Html.ValidationMessageFor(m => m.StateId, "", new { @class = "text-danger" })</label>
                                        @Html.DropDownListFor(m => m.StateId, new List<SelectListItem>(), "انتخاب کنید", new { @class = "form-control", @onchange = "getCities('StateId', 'CityId')" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <div class="comment-form-author">
                                        <label>شهر <span class="required">*</span> @Html.ValidationMessageFor(m => m.CityId, "", new { @class = "text-danger" })</label>
                                        @Html.DropDownListFor(m => m.CityId, new List<SelectListItem>(), "انتخاب کنید", new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <div class="comment-form-author">
                                        <label>کد پستی @Html.ValidationMessageFor(m => m.PostalCode, "", new { @class = "text-danger" })</label>
                                        @Html.EditorFor(m => m.PostalCode, new { htmlAttributes = new { @class = "form-control", @Value = postalCode } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="comment-form-author">
                                        <label>آدرس <span class="required">*</span> @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })</label>
                                        @Html.TextAreaFor(m => m.Address, new { @class = "form-control", @rows = "6" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <div class="comment-form-author">
                                        <label>نوع ارسال <span class="required">*</span> @Html.ValidationMessageFor(m => m.SendType, "", new { @class = "text-danger" })</label>
                                        @Html.DropDownListFor(m => m.SendType, OrderHelper.ReadAllSendTypesForSelect(), "انتخاب کنید", new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12" id="messagediv">
                                <button type="submit" value="Submit" class="site-button "> <span>ثبت سفارش</span> </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <!-- Left part END -->
        </div>
    </div>
</div>
<!-- contact area  END -->
@section bottomScripts {
    <script src="/Content/Layouts/AdminLayout/assets/js/pages/address.js"></script>
    <script>
        if (countryId != null && countryId > 0) {
            $('#CountryId').val(countryId);
            $.ajax({
                type: 'Post',
                url: '/Address/ReadAllStatesByCountryIdForSelect',
                data: { id: countryId },
                success: function (data) {
                    data.forEach(function (item) {
                        $('#StateId').append('<option value="' + item.Value + '">' + item.Text + '</option>');
                    });
                    $('#StateId').removeAttr('disabled');
                    $('#CityId').removeAttr('disabled');
                    if (stateId != null && stateId > 0) {
                        $('#StateId').val(stateId);
                        $.ajax({
                            type: 'Post',
                            url: '/Address/ReadAllCitiesByStateIdForSelect',
                            data: { id: stateId },
                            success: function (data) {
                                data.forEach(function (item) {
                                    $('#CityId').append('<option value="' + item.Value + '">' + item.Text + '</option>');
                                });
                                $('#CityId').removeAttr('disabled');
                                if (cityId != null && cityId > 0) {
                                    $('#CityId').val(cityId);
                                }
                            }
                        });
                    }
                }
            });
        }
        if (address != null && address != '') {
            $('#Address').val(address);
        }
    </script>
}